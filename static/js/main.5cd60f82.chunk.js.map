{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/services/image-finder-api.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","styles","e","preventDefault","trim","toast","error","SearchForm","type","button","label","input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","webformatURL","tags","onOpen","onClick","src","alt","image","ImageGallery","hits","map","id","largeImageURL","Button","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeydown","removeEventListener","code","createPortal","Overlay","event","target","api","fetchImg","page","fetch","then","response","ok","json","Promise","reject","Error","data","App","setPage","setHits","setError","status","setStatus","showModal","setShowModal","selectedImage","setSelectedImage","imgAPI","responseHits","prevHits","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","handleFormSubmit","resetState","openModal","position","autoClose","color","height","width","message","length","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5cd60f82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1p3im\",\"image\":\"ImageGalleryItem_image__2zNB8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2H34d\",\"Modal\":\"Modal_Modal__3OQqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__kT81H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__306Uw\"};","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport styles from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleNameChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.error('No value for request!');\n      return;\n    }\n\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form onSubmit={handleSubmit} className={styles.SearchForm}>\n        <button type=\"submit\" className={styles.button}>\n          <span className={styles.label}>Search</span>\n        </button>\n\n        <input\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n}\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ webformatURL, tags, onOpen }) => (\n  <li className={styles.ImageGalleryItem} onClick={onOpen}>\n    <img src={webformatURL} alt={tags} className={styles.image} />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  onOpen: PropTypes.func.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\nexport default ImageGalleryItem;\n","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nimport styles from './ImageGallery.module.css';\n\nconst ImageGallery = ({ hits, onOpen }) => (\n  <ul className={styles.ImageGallery}>\n    {hits.map(({ id, webformatURL, tags, largeImageURL }) => (\n      <ImageGalleryItem\n        key={id}\n        webformatURL={webformatURL}\n        tags={tags}\n        onOpen={() => onOpen(largeImageURL, tags)}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  hits: PropTypes.array.isRequired,\n  onOpen: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Button.module.css';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" className={styles.Button} onClick={onClick}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ image, onClose }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown);\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  });\n\n  const handleKeydown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={styles.Overlay} onClick={handleOverlayClick}>\n      <div className={styles.Modal}>\n        <img src={image.src} alt={image.alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  image: PropTypes.object.isRequired,\n};\n","function fetchImg(searchQuery, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=21789669-964dbbf22655e629fd0e73135&image_type=photo&orientation=horizontal&per_page=12`,\n  )\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Ничего не найдено'));\n    })\n    .then(data => {\n      // page = page + 1;\n      return data.hits;\n    });\n}\nconst api = { fetchImg };\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport imgAPI from './components/services/image-finder-api';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [hits, setHits] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [showModal, setShowModal] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    setStatus('pending');\n    imgAPI\n      .fetchImg(searchQuery, page)\n      .then(responseHits => {\n        setHits(prevHits => [...prevHits, ...responseHits]);\n        setStatus('resolved');\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      })\n      .finally(() => setStatus('resolved'));\n  }, [searchQuery, page]);\n\n  const handleFormSubmit = searchQuery => {\n    resetState();\n    setSearchQuery(searchQuery);\n  };\n\n  const resetState = () => {\n    setPage(1);\n    setHits([]);\n    setError(null);\n  };\n\n  const handleClickButton = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const openModal = (src, alt) => {\n    setShowModal(true);\n    setSelectedImage({ src, alt });\n  };\n\n  const closeModal = () => setShowModal(false);\n\n  if (status === 'idle') {\n    return (\n      <>\n        <Searchbar onSubmit={handleFormSubmit} />;\n        <ToastContainer position=\"top-center\" autoClose={3000} />\n      </>\n    );\n  }\n\n  if (status === 'pending') {\n    return (\n      <>\n        <Searchbar onSubmit={handleFormSubmit} />\n        <ImageGallery hits={hits} onOpen={openModal} />\n        <Loader type=\"ThreeDots\" color=\"#393d53\" height={80} width={80} />\n      </>\n    );\n  }\n\n  if (status === 'rejected') {\n    return <h1>{error.message}</h1>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <Searchbar onSubmit={handleFormSubmit} />\n        <ImageGallery hits={hits} onOpen={openModal} />\n        {showModal && <Modal image={selectedImage} onClose={closeModal} />}\n        {hits.length > 0 && <Button onClick={handleClickButton} />}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport styles from './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className={styles.App} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__aFDki\",\"SearchForm\":\"Searchbar_SearchForm__1CEpi\",\"button\":\"Searchbar_button__y-6Qm\",\"label\":\"Searchbar_label__3E56A\",\"input\":\"Searchbar_input__x7Isz\"};"],"sourceRoot":""}